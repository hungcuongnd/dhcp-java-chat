/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import com.google.gson.Gson;
import database.DAO.tblUserUserDAO;
import database.Entities.TbluserUser;
import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JTextPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;
import utilities.Content;
import utilities.Request;
import utilities.RequestType;

/**
 *
 * @author Administrator
 */
public class FormChatPrivacy extends javax.swing.JFrame {

    /**
     * Creates new form FormChatPrivacy1
     */
    private String user = null;
    private String friendUser = "";
    private String friendName = "";
    private String history = "";
    private PrintWriter printWriter = null;
    public String rootMsg = "";
    private boolean firstString = true;
    private int pos = 0;
    private Gson gson = new Gson();
    public Color fontColor = Color.BLACK;
    JFrame parent;
    String tmp1 = "";
    int first = 0;
    int len = 0;
    int lenBefore = 0;
    int lenAfter = 1;
    boolean hasIcon = false;
    ArrayList<Integer> array = new ArrayList<>();

    public FormChatPrivacy(String user, String friendUser, String friendName, PrintWriter printWriter) {
        this.user = user;
        this.friendUser = friendUser;
        this.friendName = friendName;
        this.printWriter = printWriter;

        initComponents();

        jtbtnBold.setText("B");
        DefaultComboBoxModel fontModel = new DefaultComboBoxModel();
        DefaultComboBoxModel fontSizeModel = new DefaultComboBoxModel();
        fontSizeModel.addElement("14");
        fontSizeModel.addElement("16");
        fontSizeModel.addElement("18");
        fontSizeModel.addElement("20");
        cboSize.setModel(fontSizeModel);

        GraphicsEnvironment e = GraphicsEnvironment.getLocalGraphicsEnvironment();
        Font[] fonts = e.getAllFonts(); // Get the fonts
//        for (Font f : fonts) {
//          dlm.addElement(f.getFontName());
//        }
        //for(int i = 80; i < fonts.length; i ++)
        //{
        //    fontModel.addElement(fonts[i].getFontName());
        //}
        fontModel.addElement("Arial");
        cboFont.setModel(fontModel);
        cboFont.setSelectedItem("Arial");

        this.setTitle(this.friendName + " - " + this.friendUser);

        JMenuBar mnBar = new JMenuBar();
        JMenu file = new JMenu("File");
        file.setMnemonic(KeyEvent.VK_F);

        JMenuItem history = new JMenuItem("History");
        JMenuItem exit = new JMenuItem("Exit");

        history.addActionListener((ActionEvent event) -> {

        });

        file.add(history);
        file.add(exit);

        mnBar.add(file);
        setJMenuBar(mnBar);
    }
    
    // Đặt avatar
    public void setAvatar(ImageIcon img) {
        this.lblAvatar.setIcon(img);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPaneContent = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTptxtInput = new javax.swing.JTextPane();
        btnSend = new javax.swing.JButton();
        cboFont = new javax.swing.JComboBox<>();
        cboSize = new javax.swing.JComboBox<>();
        jtbtnBold = new javax.swing.JToggleButton();
        jtbtnItalic = new javax.swing.JToggleButton();
        jtbtnUnderline = new javax.swing.JToggleButton();
        btnFontColor = new javax.swing.JButton();
        btnEmotion = new javax.swing.JButton();
        lblAvatar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(jTextPaneContent);

        jTptxtInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTptxtInputKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTptxtInput);

        btnSend.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnSend.setText("Gửi");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        cboFont.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        cboFont.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboFont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFontActionPerformed(evt);
            }
        });

        cboSize.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        cboSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSizeActionPerformed(evt);
            }
        });

        jtbtnBold.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jtbtnBold.setText("B");
        jtbtnBold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbtnBoldActionPerformed(evt);
            }
        });

        jtbtnItalic.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jtbtnItalic.setText("I");
        jtbtnItalic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbtnItalicActionPerformed(evt);
            }
        });

        jtbtnUnderline.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jtbtnUnderline.setText("U");
        jtbtnUnderline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbtnUnderlineActionPerformed(evt);
            }
        });

        btnFontColor.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnFontColor.setText("Màu chữ");
        btnFontColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFontColorActionPerformed(evt);
            }
        });

        btnEmotion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/001s.gif"))); // NOI18N
        btnEmotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmotionActionPerformed(evt);
            }
        });

        lblAvatar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cboFont, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtbtnBold, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtbtnItalic, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtbtnUnderline, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFontColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEmotion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAvatar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                    .addComponent(lblAvatar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEmotion, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnFontColor)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtbtnUnderline)
                        .addComponent(jtbtnItalic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtbtnBold, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(cboFont, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cboSize, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEmotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmotionActionPerformed
        // TODO add your handling code here:
        SmileyChooser sc = new SmileyChooser(parent, true);
        sc.setframe(parent);
        sc.setChatWindow(this);
        sc.setTitle("Choose Smiley");
//        sc.setLocationRelativeTo(this);
        sc.setLocation(btnEmotion.getLocationOnScreen().x - 150, (btnEmotion.getLocationOnScreen().y - 185));
        sc.setVisible(true);
    }//GEN-LAST:event_btnEmotionActionPerformed

    private void cboFontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFontActionPerformed
        // TODO add your handling code here:
        updatefont();
    }//GEN-LAST:event_cboFontActionPerformed

    private void cboSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSizeActionPerformed
        // TODO add your handling code here:
        updatefont();
    }//GEN-LAST:event_cboSizeActionPerformed

    private void jtbtnBoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbtnBoldActionPerformed
        // TODO add your handling code here:
        updatefont();
    }//GEN-LAST:event_jtbtnBoldActionPerformed

    private void jtbtnItalicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbtnItalicActionPerformed
        // TODO add your handling code here:
        updatefont();
    }//GEN-LAST:event_jtbtnItalicActionPerformed

    private void jtbtnUnderlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbtnUnderlineActionPerformed
        // TODO add your handling code here:
        updatefont();
    }//GEN-LAST:event_jtbtnUnderlineActionPerformed

    private void btnFontColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFontColorActionPerformed
        // TODO add your handling code here:
        updatefont();
    }//GEN-LAST:event_btnFontColorActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        String newchat = jTptxtInput.getText();
        send(newchat);
    }//GEN-LAST:event_btnSendActionPerformed

    private void jTptxtInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTptxtInputKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !evt.isControlDown()) {
            send(jTptxtInput.getText());
        }

    }//GEN-LAST:event_jTptxtInputKeyPressed

    public void send(String newChat) {
        // Lấy text từ ô input
        //String newChat = this.jTptxtInput.getText();

        // Input có chữ mới gửi
        if (!newChat.equals("")) {
            // Clear ô input
            //this.jTptxtInput.setText("");
/*
            // Tạo json
            MyMessage msg = new MyMessage(this.user, this.friend, null, newChat);
            String json = this.gson.toJson(msg);

            // Các form chat xài chung printWriter của FormMainClient để đẩy json đi
            this.printWriter.println(json);
            this.printWriter.flush();
             */
            // update bảng history
            // updateTxtContent(this.user + ": " + newChat);
            updateTxtContentSend(newChat);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEmotion;
    private javax.swing.JButton btnFontColor;
    private javax.swing.JButton btnSend;
    private javax.swing.JComboBox<String> cboFont;
    private javax.swing.JComboBox<String> cboSize;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTextPane jTextPaneContent;
    public javax.swing.JTextPane jTptxtInput;
    private javax.swing.JToggleButton jtbtnBold;
    private javax.swing.JToggleButton jtbtnItalic;
    private javax.swing.JToggleButton jtbtnUnderline;
    private javax.swing.JLabel lblAvatar;
    // End of variables declaration//GEN-END:variables

    public void updateTxtContentSend(String newChat) {

//    StyledDocument doc = (StyledDocument) jTptxtInput.getDocument();
//    Element element = doc.getCharacterElement(0);
//    AttributeSet as = element.getAttributes();
//    //apply a new style based on previous 
//    MutableAttributeSet asNew = new SimpleAttributeSet(as.copyAttributes());
//    //StyleConstants.setBold(asNew, !StyleConstants.isBold(as));
//    //doc.setCharacterAttributes(0, jTptxtInput.getSelectedText().length(), asNew, true);
//    //String text = (StyleConstants.isBold(as) ? "Cancel Bold" : "Bold");
//        
//    appendToPane(jTextPaneContent, " " + this.user + ": ", Color.red, StyleConstants.ALIGN_LEFT, false, false);
//    appendToPane(jTextPaneContent, newChat + "\n", Color.BLACK, StyleConstants.ALIGN_LEFT, isBold, isItalic);
//       // jTextPaneContent.setText(newChat);
        if (newChat.length() < 1) {
            return;
        }
        //String tmp=txtInput.getText();
        //txtInput.setText("");
        SimpleAttributeSet sas = new SimpleAttributeSet();
        StyleConstants.setFontSize(sas, Integer.parseInt(cboSize.getSelectedItem().toString()));
        StyleConstants.setForeground(sas, fontColor);
        StyleConstants.setBold(sas, jtbtnBold.isSelected());
        StyleConstants.setUnderline(sas, jtbtnUnderline.isSelected());
        StyleConstants.setItalic(sas, jtbtnItalic.isSelected());
        StyleConstants.setFontFamily(sas, cboFont.getSelectedItem().toString());
        StyleConstants.setAlignment(sas, StyleConstants.ALIGN_RIGHT);
        Object sas1 = sas.toString();
        Content ct = new Content(newChat, sas1);
        // Tạo json
        Request rq = new Request(RequestType.MESSAGE, this.user, this.friendUser);
        rq.setContent(ct);
        Object json = this.gson.toJson(rq);
        try {
            // Các form chat xài chung printWriter của FormMainClient để đẩy json đi
            this.printWriter.println(json);
            this.printWriter.flush();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        displayTextSend(this.user, sas, newChat);
        jTptxtInput.setText("");

    }

    private void displayTextSend(String user, SimpleAttributeSet sas, String tmp) {
        StyledDocument doc = jTextPaneContent.getStyledDocument();
        SimpleAttributeSet buffer = new SimpleAttributeSet();
        StyleConstants.setBold(buffer, true);
        StyleConstants.setFontSize(buffer, 12);
        StyleConstants.setForeground(buffer, Color.red);
        StyleConstants.setAlignment(buffer, StyleConstants.ALIGN_LEFT);

        try {
            jTextPaneContent.getStyledDocument().insertString(doc.getLength(), "\n" + user + ": ", buffer);
            while (tmp.indexOf("<s>") > -1 && tmp.indexOf("</s>") > -1) {

                jTextPaneContent.getStyledDocument().insertString(jTextPaneContent.getStyledDocument().getLength(), tmp.substring(0, tmp.indexOf("<s>")), sas);
                tmp = tmp.substring(tmp.indexOf("<s>"));
                try {
                    String imgName = tmp.substring(3, tmp.indexOf("</s>"));

                    ImageIcon jl = new ImageIcon(new javax.swing.ImageIcon(getClass().getResource("/image/" + imgName + ".gif")).getImage());
                    jTextPaneContent.setCaretPosition(jTextPaneContent.getStyledDocument().getLength());
                    jTextPaneContent.insertIcon(jl);
                    tmp = tmp.substring(tmp.indexOf("</s>") + 4);
                } catch (Exception e) {
                    jTextPaneContent.getStyledDocument().insertString(jTextPaneContent.getStyledDocument().getLength(), tmp.substring(0, tmp.indexOf("</s>") + 4), sas);
                    tmp = tmp.substring(tmp.indexOf("</s>") + 5);
                }
            }
            StyleConstants.setAlignment(sas, StyleConstants.ALIGN_LEFT);
            //doc.setCharacterAttributes(0,doc.getLength(),sas,false);
            //jTextPaneContent.getStyledDocument().insertString(doc.getLength(), tmp, sas);
            int len = jTextPaneContent.getDocument().getLength();
            jTextPaneContent.setCaretPosition(len);
            jTextPaneContent.setCharacterAttributes(sas, false);
            jTextPaneContent.setParagraphAttributes(sas, true);
            jTextPaneContent.replaceSelection(tmp);

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    private void displayTextReceive(String user, SimpleAttributeSet sas, String tmp) {
        StyledDocument doc = jTextPaneContent.getStyledDocument();
        SimpleAttributeSet buffer = new SimpleAttributeSet();
        StyleConstants.setBold(buffer, true);
        StyleConstants.setFontSize(buffer, 12);
        StyleConstants.setForeground(buffer, Color.BLUE);
        StyleConstants.setAlignment(buffer, StyleConstants.ALIGN_RIGHT);
        try {
            jTextPaneContent.getStyledDocument().insertString(doc.getLength(), "\n" + user + ": ", buffer);
            while (tmp.indexOf("<s>") > -1 && tmp.indexOf("</s>") > -1) {

                jTextPaneContent.getStyledDocument().insertString(jTextPaneContent.getStyledDocument().getLength(), tmp.substring(0, tmp.indexOf("<s>")), sas);
                tmp = tmp.substring(tmp.indexOf("<s>"));
                try {
                    String imgName = tmp.substring(3, tmp.indexOf("</s>"));

                    ImageIcon jl = new ImageIcon(new javax.swing.ImageIcon(getClass().getResource("/image/" + imgName + ".gif")).getImage());
                    jTextPaneContent.setCaretPosition(jTextPaneContent.getStyledDocument().getLength());
                    jTextPaneContent.insertIcon(jl);
                    tmp = tmp.substring(tmp.indexOf("</s>") + 4);
                } catch (Exception e) {
                    jTextPaneContent.getStyledDocument().insertString(jTextPaneContent.getStyledDocument().getLength(), tmp.substring(0, tmp.indexOf("</s>") + 4), sas);
                    tmp = tmp.substring(tmp.indexOf("</s>") + 5);
                }
            }
            StyleConstants.setAlignment(sas, StyleConstants.ALIGN_RIGHT);
            //jTextPaneContent.getStyledDocument().insertString(doc.getLength(), tmp, sas);
            int len = jTextPaneContent.getDocument().getLength();
            jTextPaneContent.setCaretPosition(len);
            jTextPaneContent.setCharacterAttributes(sas, false);
            jTextPaneContent.setParagraphAttributes(sas, true);
            jTextPaneContent.replaceSelection(tmp);

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    public void updateTxtContentReceive(Request rq) {

        //appendToPane(jTextPaneContent, msg.getUserSend() + ": ", Color.BLUE, StyleConstants.ALIGN_RIGHT, false, false);
        //appendToPane(jTextPaneContent, msg.getContent() + " " +"\n", Color.BLACK, StyleConstants.ALIGN_RIGHT, false, false);
        //size=14 foreground=java.awt.Color[r=0,g=0,b=0] bold=true underline=false italic=false family=Arial 
        String tmp = rq.getContent().getSas().toString();

        String seg[] = tmp.split(" ");
        String fontSize = seg[0].substring(seg[0].lastIndexOf("=") + 1);
        String foreground = seg[1].substring(seg[1].indexOf("=") + 1);
        String foregroundElement = foreground.substring(foreground.indexOf("[") + 1, foreground.indexOf("]"));

        int red = Integer.parseInt(foregroundElement.substring(foregroundElement.indexOf("=") + 1, foregroundElement.indexOf(",")));
        int green = Integer.parseInt(foregroundElement.substring(foregroundElement.indexOf("g") + 2, foregroundElement.indexOf("b") - 1));
        int blue = Integer.parseInt(foregroundElement.substring(foregroundElement.indexOf("b") + 2));

        String bold = seg[2].substring(seg[2].indexOf("=") + 1);
        String underline = seg[3].substring(seg[3].indexOf("=") + 1);
        String italic = seg[4].substring(seg[4].indexOf("=") + 1);

        String fontFamily = seg[5].substring(seg[5].indexOf("=") + 1);
        SimpleAttributeSet sas = new SimpleAttributeSet();
        StyleConstants.setFontSize(sas, Integer.parseInt(fontSize));
        StyleConstants.setForeground(sas, new Color(red, green, blue));
        StyleConstants.setBold(sas, (bold.contains("true")) ? true : false);
        StyleConstants.setUnderline(sas, (underline.contains("true")) ? true : false);
        StyleConstants.setItalic(sas, (italic.contains("true")) ? true : false);
        StyleConstants.setFontFamily(sas, fontFamily);

        displayTextReceive(rq.getFromUser(), sas, rq.getContent().getContent());
    }

    private void appendToPane(JTextPane tp, String msg, Color c, int align, boolean isBold, boolean isItalic) {
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);

        aset = sc.addAttribute(aset, StyleConstants.FontFamily, "Lucida Console");
        aset = sc.addAttribute(aset, StyleConstants.Alignment, align);
        aset = sc.addAttribute(aset, StyleConstants.CharacterConstants.Bold, isBold);
        aset = sc.addAttribute(aset, StyleConstants.CharacterConstants.Italic, isItalic);

        int len = tp.getDocument().getLength();
        tp.setCaretPosition(len);
        tp.setCharacterAttributes(aset, false);
        tp.setParagraphAttributes(aset, true);
        tp.replaceSelection(msg);
        StyledDocument doc = jTptxtInput.getStyledDocument();

    }

    public void run() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void updatefont() {
        StyledDocument doc = jTptxtInput.getStyledDocument();
        SimpleAttributeSet sas = new SimpleAttributeSet();
        StyleConstants.setFontSize(sas, Integer.parseInt(cboSize.getSelectedItem().toString()));
        StyleConstants.setForeground(sas, fontColor);
        StyleConstants.setBold(sas, jtbtnBold.isSelected());
        StyleConstants.setUnderline(sas, jtbtnUnderline.isSelected());
        StyleConstants.setItalic(sas, jtbtnItalic.isSelected());
        StyleConstants.setFontFamily(sas, cboFont.getSelectedItem().toString());
        doc.setCharacterAttributes(0, doc.getLength(), sas, true);
    }

}
